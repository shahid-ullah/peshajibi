# Generated by Django 4.1.5 on 2023-01-30 04:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('peshajibi', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                (
                    'username',
                    models.CharField(
                        blank=True,
                        help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                        max_length=150,
                        null=True,
                        verbose_name='username',
                    ),
                ),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('mobile', models.CharField(max_length=100, unique=True, verbose_name='mobile number')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='accounts/')),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('blood_group_bng', models.CharField(blank=True, max_length=10, null=True)),
                ('blood_group_eng', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'db_table': 'account',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserTypeModel',
            fields=[
                (
                    'id',
                    models.PositiveSmallIntegerField(
                        choices=[(1, 'peshajibi'), (2, 'guest')], primary_key=True, serialize=False
                    ),
                ),
            ],
            options={
                'db_table': 'user_type',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='GuestUserProfileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='guest_profile',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'db_table': 'guest_user',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DivisionUserProfileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('present_ward', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_ward', models.CharField(blank=True, max_length=100, null=True)),
                ('present_house_no', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_house_no', models.CharField(blank=True, max_length=100, null=True)),
                ('present_village', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_village', models.CharField(blank=True, max_length=100, null=True)),
                ('present_road_no', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_road_no', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'permanent_district',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='permanent_district_users',
                        to='peshajibi.districtmodel',
                    ),
                ),
                (
                    'permanent_division',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='permanent_division_users',
                        to='peshajibi.divisionmodel',
                    ),
                ),
                (
                    'permanent_union',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='permanent_union_users',
                        to='peshajibi.unionmodel',
                    ),
                ),
                (
                    'permanent_upazila',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='permanent_upazila_users',
                        to='peshajibi.upazilamodel',
                    ),
                ),
                (
                    'present_district',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='current_district_users',
                        to='peshajibi.districtmodel',
                    ),
                ),
                (
                    'present_division',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='current_division_users',
                        to='peshajibi.divisionmodel',
                    ),
                ),
                (
                    'present_union',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='current_union_users',
                        to='peshajibi.unionmodel',
                    ),
                ),
                (
                    'present_upazila',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='current_upazila_users',
                        to='peshajibi.upazilamodel',
                    ),
                ),
                (
                    'profession',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peshajibi.professionmodel'),
                ),
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='division_profile',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'db_table': 'division_user_profile',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CityCorporationUserProfileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('present_sector', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_sector', models.CharField(blank=True, max_length=100, null=True)),
                ('present_flat_no', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_flat_no', models.CharField(blank=True, max_length=100, null=True)),
                ('present_house_no', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_house_no', models.CharField(blank=True, max_length=100, null=True)),
                ('present_road_no', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_road_no', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'permanent_city',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='permanent_city_users',
                        to='peshajibi.citycorporationmodel',
                    ),
                ),
                (
                    'permanent_thana',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='permanent_thana_users',
                        to='peshajibi.citycorporationthanamodel',
                    ),
                ),
                (
                    'present_city',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='current_city_users',
                        to='peshajibi.citycorporationmodel',
                    ),
                ),
                (
                    'present_thana',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='current_thana_users',
                        to='peshajibi.citycorporationthanamodel',
                    ),
                ),
                (
                    'profession',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peshajibi.professionmodel'),
                ),
                (
                    'user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='city_profile',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'db_table': 'city_user_profile',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='accountsmodel',
            name='user_type',
            field=models.ManyToManyField(to='users.usertypemodel'),
        ),
    ]
